parameters:
  ws.settings.param.config:
    URL: 'http://www.dummy.com/ws'
    APIKey: 'abcd1234'
    database: 'abcd'

services:
  europaSearch.ws.settings:
    class: EC\EuropaSearch\EuropaSearchConfig
    arguments: ['%ws.settings.param.config%']

  # WebContent Indexing service.
  transporter:
      class: EC\EuropaWS\Transporters\DummyTransporter
      arguments: ['@europaSearch.ws.settings']
  messageProxy.indexing.webContent:
      class: EC\EuropaSearch\Proxies\Index\WebContentConverter
  componentProxy.metadata.boolean:
      class: EC\EuropaSearch\Proxies\Index\DocumentMetadata\BooleanMetadataConverter
  componentProxy.metadata.date:
      class: EC\EuropaSearch\Proxies\Index\DocumentMetadata\DateMetadataConverter
  componentProxy.metadata.numeric:
      class: EC\EuropaSearch\Proxies\Index\DocumentMetadata\DefaultMetadataConverter
  componentProxy.metadata.notIndexed:
      class: EC\EuropaSearch\Proxies\Index\DocumentMetadata\DefaultMetadataConverter
  componentProxy.metadata.string:
      class: EC\EuropaSearch\Proxies\Index\DocumentMetadata\DefaultMetadataConverter
  proxyController:
      class:  EC\EuropaWS\Proxies\BasicProxyController
      arguments: ['@europaSearch.ws.settings']
      calls:
          - [defineMessageConverter, ['messageProxy.indexing.webContent', '@messageProxy.indexing.webContent']]
          - [defineComponentConverter, ['componentProxy.metadata.boolean', '@componentProxy.metadata.boolean']]
          - [defineComponentConverter, ['componentProxy.metadata.date', '@componentProxy.metadata.date']]
          - [defineComponentConverter, ['componentProxy.metadata.numeric', '@componentProxy.metadata.numeric']]
          - [defineComponentConverter, ['componentProxy.metadata.notIndexed', '@componentProxy.metadata.notIndexed']]
          - [defineComponentConverter, ['componentProxy.metadata.string', '@componentProxy.metadata.string']]
  client.indexing.webDocument:
    class: EC\EuropaWS\Clients\DefaultClient
    arguments: ['@validator.default', '@proxyController', '@transporter', '@europaSearch.ws.settings']

  # Search Service
  messageProxy.searching.search:
        class: EC\EuropaSearch\Proxies\Search\SearchConverter
  componentProxy.searching.filters.simple.fieldExists:
      class: EC\EuropaSearch\Proxies\Search\Filters\Simple\FieldExistsConverter
  componentProxy.searching.filters.simple.range:
      class: EC\EuropaSearch\Proxies\Search\Filters\Simple\RangeConverter
  componentProxy.searching.filters.simple.term:
      class: EC\EuropaSearch\Proxies\Search\Filters\Simple\TermConverter
  componentProxy.searching.filters.simple.terms:
      class: EC\EuropaSearch\Proxies\Search\Filters\Simple\TermsConverter
  componentProxy.searching.filters.combined.aggregate:
      class: EC\EuropaSearch\Proxies\Search\Filters\Combined\AggregatedFiltersConverter
  componentProxy.searching.filters.combined.booleanQuery:
      class: EC\EuropaSearch\Proxies\Search\Filters\Combined\BooleanQueryConverter
  componentProxy.searching.filters.combined.boostingQuery:
      class: EC\EuropaSearch\Proxies\Search\Filters\Combined\BoostingQueryConverter
  proxyController.search:
      class:  EC\EuropaSearch\Proxies\Search\SearchProxyController
      arguments: ['@europaSearch.ws.settings']
      calls:
          - [defineMessageConverter, ['messageProxy.searching.search', '@messageProxy.searching.search']]
          - [defineComponentConverter, ['componentProxy.searching.filters.simple.fieldExists', '@componentProxy.searching.filters.simple.fieldExists']]
          - [defineComponentConverter, ['componentProxy.searching.filters.simple.range', '@componentProxy.searching.filters.simple.range']]
          - [defineComponentConverter, ['componentProxy.searching.filters.simple.term', '@componentProxy.searching.filters.simple.term']]
          - [defineComponentConverter, ['componentProxy.searching.filters.simple.terms', '@componentProxy.searching.filters.simple.terms']]
          - [defineComponentConverter, ['componentProxy.searching.filters.combined.aggregate', '@componentProxy.searching.filters.combined.aggregate']]
          - [defineComponentConverter, ['componentProxy.searching.filters.combined.booleanQuery', '@componentProxy.searching.filters.combined.booleanQuery']]
          - [defineComponentConverter, ['componentProxy.searching.filters.combined.boostingQuery', '@componentProxy.searching.filters.combined.boostingQuery']]
  client.searching.search:
    class: EC\EuropaWS\Clients\DefaultClient
    arguments: ['@validator.default', '@proxyController.search', '@transporter', '@europaSearch.ws.settings']