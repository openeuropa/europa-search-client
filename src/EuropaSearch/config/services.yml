services:
  transporter:
      class: EC\EuropaWS\Transporters\DummyTransporter
  # WebContent Indexing service.
  transporter.indexing:
     class: EC\EuropaSearch\Transporters\IndexingTransporter
  messageProxy.indexing.webContent:
      class: EC\EuropaSearch\Proxies\Index\WebContentConverter
  componentProxy.metadata.boolean:
      class: EC\EuropaSearch\Proxies\Index\DocumentMetadata\BooleanMetadataConverter
  componentProxy.metadata.date:
      class: EC\EuropaSearch\Proxies\Index\DocumentMetadata\DateMetadataConverter
  componentProxy.metadata.numeric:
      class: EC\EuropaSearch\Proxies\Index\DocumentMetadata\DefaultMetadataConverter
  componentProxy.metadata.notIndexed:
      class: EC\EuropaSearch\Proxies\Index\DocumentMetadata\DefaultMetadataConverter
  componentProxy.metadata.string:
      class: EC\EuropaSearch\Proxies\Index\DocumentMetadata\DefaultMetadataConverter
  proxyController:
      class:  EC\EuropaWS\Proxies\BasicProxyController
      calls:
          - [defineMessageConverter, ['messageProxy.indexing.webContent', '@messageProxy.indexing.webContent']]
          - [defineComponentConverter, ['componentProxy.metadata.boolean', '@componentProxy.metadata.boolean']]
          - [defineComponentConverter, ['componentProxy.metadata.date', '@componentProxy.metadata.date']]
          - [defineComponentConverter, ['componentProxy.metadata.numeric', '@componentProxy.metadata.numeric']]
          - [defineComponentConverter, ['componentProxy.metadata.notIndexed', '@componentProxy.metadata.notIndexed']]
          - [defineComponentConverter, ['componentProxy.metadata.string', '@componentProxy.metadata.string']]
  client.indexing.webDocument:
    class: EC\EuropaWS\Clients\DefaultClient
    arguments: ['@validator.default', '@proxyController', '@transporter.indexing']

  # Search Service
  transporter.searching:
     class: EC\EuropaSearch\Transporters\SearchTransporter
  messageProxy.searching.search:
        class: EC\EuropaSearch\Proxies\Search\SearchConverter
  componentProxy.searching.filters.clauses.fieldExists:
      class: EC\EuropaSearch\Proxies\Search\Filters\Clauses\FieldExistsClauseConverter
  componentProxy.searching.filters.clauses.range:
      class: EC\EuropaSearch\Proxies\Search\Filters\Clauses\RangeClauseConverter
  componentProxy.searching.filters.clauses.term:
      class: EC\EuropaSearch\Proxies\Search\Filters\Clauses\TermClauseConverter
  componentProxy.searching.filters.clauses.terms:
      class: EC\EuropaSearch\Proxies\Search\Filters\Clauses\TermsClauseConverter
  componentProxy.searching.filters.queries.aggregate:
      class: EC\EuropaSearch\Proxies\Search\Filters\Queries\FilterQueryComponentConverter
  componentProxy.searching.filters.queries.booleanQuery:
      class: EC\EuropaSearch\Proxies\Search\Filters\Queries\BooleanQueryConverter
  componentProxy.searching.filters.queries.boostingQuery:
      class: EC\EuropaSearch\Proxies\Search\Filters\Queries\BoostingQueryConverter
  proxyController.search:
      class:  EC\EuropaSearch\Proxies\Search\SearchProxyController
      calls:
          - [defineMessageConverter, ['messageProxy.searching.search', '@messageProxy.searching.search']]
          - [defineComponentConverter, ['componentProxy.searching.filters.clauses.fieldExists', '@componentProxy.searching.filters.clauses.fieldExists']]
          - [defineComponentConverter, ['componentProxy.searching.filters.clauses.range', '@componentProxy.searching.filters.clauses.range']]
          - [defineComponentConverter, ['componentProxy.searching.filters.clauses.term', '@componentProxy.searching.filters.clauses.term']]
          - [defineComponentConverter, ['componentProxy.searching.filters.clauses.terms', '@componentProxy.searching.filters.clauses.terms']]
          - [defineComponentConverter, ['componentProxy.searching.filters.queries.aggregate', '@componentProxy.searching.filters.queries.aggregate']]
          - [defineComponentConverter, ['componentProxy.searching.filters.queries.booleanQuery', '@componentProxy.searching.filters.queries.booleanQuery']]
          - [defineComponentConverter, ['componentProxy.searching.filters.queries.boostingQuery', '@componentProxy.searching.filters.queries.boostingQuery']]
  client.searching.search:
    class: EC\EuropaWS\Clients\DefaultClient
    arguments: ['@validator.default', '@proxyController.search', '@transporter.searching']